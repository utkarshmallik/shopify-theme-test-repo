{% comment %}
  Renders product buy-buttons.
  Accepts:
  - product: {Object} product object.
  - block: {Object} passing the block information.
  - product_form_id: {String} product form id.
  - section_id: {String} id of section to which this snippet belongs.
  - show_pickup_availability: {Boolean} for the pickup availability. If true the pickup availability is rendered, false - not rendered (optional).

  Usage:
  {% render 'buy-buttons', block: block, product: product, product_form_id: product_form_id, section_id: section.id, show_pickup_availability: true %}
{% endcomment %}
<style>
  .button {
    --color: #fff;
    --background: #6d58ff;
    --height: 46px;
    --width: 100%;
    --icon: #fff;
    padding: 0;
    cursor: pointer;
    text-align: center;
    position: relative;
    border: none;
    outline: none;
    background: none;
    -webkit-appearance: none;
    -webkit-tap-highlight-color: transparent;
    width: var(--width);
    letter-spacing: .5px;
    font-size: 14px;
    font-weight: 500;
    color: var(--color);
    line-height: var(--height);
    &:before,
    &:after {
        content: '';
        display: block;
        position: absolute;
        top: 50%;
        left: 50%;
    }
    &:before {
        transform: translate(-50%, -50%);
        width: var(--before-w, var(--width));
        height: var(--before-h, var(--height));
        border-radius: var(--before-r, 7px);
        background: var(--background);
        transform-origin: 50% 50%;
        transition: width .3s, height .3s, border-radius .2s;
        transition-delay: .2s;
    }
    &:after {
        width: 16px;
        height: 16px;
        margin: -8px 0 0 -8px;
        background: var(--icon);
        z-index: 2;
        border-radius: 50%;
        transform: scale(0);
    }
    span {
        z-index: 1;
        display: block;
        position: relative;
        opacity: var(--span-o, 1);
        transform: scale(var(--span-s, 1));
        transition: opacity .3s, transform .2s;
        transition-delay: .2s;
    }
    svg {
        width: 15px;
        height: 13px;
        display: block;
        position: absolute;
        left: 50%;
        top: 50%;
        stroke: var(--icon);
        stroke-width: 2px;
        stroke-linecap: round;
        stroke-linejoin: round;
        fill: none;
        transform: translate(-50%, -50%);
        stroke-dasharray: 17px;
        stroke-dashoffset: var(--svg-o, 17px);
        transition: stroke-dashoffset .3s ease;
    }
    &.processing {
        --before-w: 41px;
        --before-h: 41px;
        --before-r: 22px;
        --span-o: 0;
        --span-s: .6;
        --after-s: 1;
        --svg-o: 34px;
        &:before {
            animation: pulse 2s linear forwards;
        }
        &:after {
            animation: dot 0.5s  linear forwards;
        }
        svg {
            transition-delay: 0.5s;
        }
    }
}
@keyframes pulse {
    4% {
        transform: translate(-50%, -50%) scaleX(1.1);
    }
    8% {
        transform: translate(-50%, -50%);
    }
    24%,
    56%,
    88% {
        transform: translate(-50%, -50%) scale(.8);
    }
    40%,
    72% {
        transform: translate(-50%, -50%) scale(1.2);
    }
}
@keyframes dot {
    8% {
        transform: scale(0);
    }
    16% {
        transform: scale(1) rotate(30deg) translateX(48px);
    }
    95% {
        transform: scale(1) rotate(1000deg) translateX(48px);
    }
    100% {
        transform: scale(.125) rotate(1050deg) translate(52px, -6px);
    }
}
  .button, .shopify-challenge__button, .customer button, button.shopify-payment-button__button--unbranded {
    border-radius: 7px;
  }
  .button:after, .shopify-challenge__button:after, .customer button:after, .shopify-payment-button__button--unbranded:after {
    border-radius: 7px;
  }
</style>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    let one = document.querySelector('#custom-button')
 
    one.addEventListener('click', e => {
      one.classList.add('processing');
      setTimeout(() => {
        one.classList.remove('processing')
        one.querySelector('span').innerHTML = 'Add To Cart'
      }, 2000)
    });
  })
</script>
<div {{ block.shopify_attributes }}>
  {%- if product != blank -%}
    {%- liquid
      assign gift_card_recipient_feature_active = false
      if block.settings.show_gift_card_recipient and product.gift_card?
        assign gift_card_recipient_feature_active = true
      endif

      assign show_dynamic_checkout = false
      if block.settings.show_dynamic_checkout and gift_card_recipient_feature_active == false
        assign show_dynamic_checkout = true
      endif
    -%}

    <product-form
      class="product-form"
      data-hide-errors="{{ gift_card_recipient_feature_active }}"
      data-section-id="{{ section.id }}"
    >
      <div class="product-form__error-message-wrapper" role="alert" hidden>
        <span class="svg-wrapper">
          {{- 'icon-error.svg' | inline_asset_content -}}
        </span>
        <span class="product-form__error-message"></span>
      </div>

      {%- form 'product',
        product,
        id: product_form_id,
        class: 'form',
        novalidate: 'novalidate',
        data-type: 'add-to-cart-form'
      -%}
        <input
          type="hidden"
          name="id"
          value="{{ product.selected_or_first_available_variant.id }}"
          {% if product.selected_or_first_available_variant.available == false
            or quantity_rule_soldout
            or product.selected_or_first_available_variant == null
          %}
            disabled
          {% endif %}
          class="product-variant-id"
        >

        {%- if gift_card_recipient_feature_active -%}
          {%- render 'gift-card-recipient-form', product: product, form: form, section: section -%}
        {%- endif -%}

        <div class="product-form__buttons">
          {%- liquid
            assign check_against_inventory = true
            if product.selected_or_first_available_variant.inventory_management != 'shopify' or product.selected_or_first_available_variant.inventory_policy == 'continue'
              assign check_against_inventory = false
            endif
            if product.selected_or_first_available_variant.quantity_rule.min > product.selected_or_first_available_variant.inventory_quantity and check_against_inventory
              assign quantity_rule_soldout = true
            endif
          -%}
          <button
            id="custom-button"
            type="submit"
            name="add"
            class="button restart product-form__submit button button--full-width {% if show_dynamic_checkout %}button--secondary{% else %}button--primary{% endif %}"
            {% if product.selected_or_first_available_variant.available == false
              or quantity_rule_soldout
              or product.selected_or_first_available_variant == null
            %}
              disabled
            {% endif %}
          >
            
              {%- if product.selected_or_first_available_variant == null -%}
                <span>
                {{ 'products.product.unavailable' | t }}
                </span>
                
              {%- elsif product.selected_or_first_available_variant.available == false or quantity_rule_soldout -%}
                <span>
                {{ 'products.product.sold_out' | t }}
                </span>
              {%- else -%}
                <span>Add to cart</span>
                <svg viewBox="0 0 15 13">
                    <polyline points="2 6.5 6 10.5 13 2.5"></polyline>
                </svg>  
              {%- endif -%}
           
            {%- render 'loading-spinner' -%}
          </button>
          {%- if show_dynamic_checkout -%}
            {{ form | payment_button }}
          {%- endif -%}
        </div>
      {%- endform -%}
    </product-form>
  {%- else -%}
    <div class="product-form">
      <div class="product-form__buttons form">
        <button
          type="submit"
          name="add"
          class="product-form__submit button button--full-width button--primary"
          disabled
        >
          {{ 'products.product.sold_out' | t }}
        </button>
      </div>
    </div>
  {%- endif -%}

  {%- if show_pickup_availability -%}
    {{ 'component-pickup-availability.css' | asset_url | stylesheet_tag }}

    {%- assign pick_up_availabilities = product.selected_or_first_available_variant.store_availabilities
      | where: 'pick_up_enabled', true
    -%}

    <pickup-availability
      class="product__pickup-availabilities quick-add-hidden"
      {% if product.selected_or_first_available_variant.available and pick_up_availabilities.size > 0 %}
        available
      {% endif %}
      data-root-url="{{ routes.root_url }}"
      data-variant-id="{{ product.selected_or_first_available_variant.id }}"
      data-has-only-default-variant="{{ product.has_only_default_variant }}"
      data-product-page-color-scheme="gradient color-{{ section.settings.color_scheme }}"
    >
      <template>
        <pickup-availability-preview class="pickup-availability-preview">
          <span class="svg-wrapper">
            {{- 'icon-unavailable.svg' | inline_asset_content -}}
          </span>
          <div class="pickup-availability-info">
            <p class="caption-large">{{ 'products.product.pickup_availability.unavailable' | t }}</p>
            <button class="pickup-availability-button link link--text underlined-link">
              {{ 'products.product.pickup_availability.refresh' | t }}
            </button>
          </div>
        </pickup-availability-preview>
      </template>
    </pickup-availability>

    <script src="{{ 'pickup-availability.js' | asset_url }}" defer="defer"></script>
  {%- endif -%}
</div>
